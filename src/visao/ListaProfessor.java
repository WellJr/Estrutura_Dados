/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import controle.ListaProfessores;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.ModeloTabela;
import modelo.Pessoa;

/**
 *
 * @author Wellington
 */
public class ListaProfessor extends javax.swing.JFrame {
  
    
    private String nome;
    private String rg;
    private String cpf;
    private String endereco;
    private String cidade;
    private String numero;
    private String data;
    private String sexo;
    private String telefone;
    private String email;
    private String registro;
    private String usuario;
    private String senha;
    
    
    
    public ListaProfessor() {
        initComponents();
        try {
            preecherTabela();
        } catch (IOException ex) {
            Logger.getLogger(ListaProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProfessor = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanelCab = new javax.swing.JPanel();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTableProfessor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableProfessor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTableProfessor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProfessorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableProfessor);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Registros dos Professores");

        jPanelCab.setBackground(new java.awt.Color(51, 51, 255));

        jTextFieldPesquisar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTextFieldPesquisar.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldPesquisar.setText("Pesquisar");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/novo_projeto/imagens/Apesquisar.png"))); // NOI18N

        javax.swing.GroupLayout jPanelCabLayout = new javax.swing.GroupLayout(jPanelCab);
        jPanelCab.setLayout(jPanelCabLayout);
        jPanelCabLayout.setHorizontalGroup(
            jPanelCabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCabLayout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );
        jPanelCabLayout.setVerticalGroup(
            jPanelCabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelCab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(253, 253, 253))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableProfessorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProfessorMouseClicked
        // TODO add your handling code here:
       // ativaBtnEAS();

         String message = "Deseja abrir edição para este registro?";
         String title = "Confirmação";
         int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
         if(reply == JOptionPane.YES_OPTION)
         {
         
            setNome("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),0));
            setRg("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),1));
            setCpf("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),2));
            setEndereco("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),3));
            setCidade("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),4));
            setNumero("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),5));
            setData("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),6));
            setSexo("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),7));
            setTelefone("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),8));
            setEmail("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),9));
        //String instituicao
            setRegistro("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),10));
            setUsuario("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),11));
            setSenha("" + jTableProfessor.getValueAt(jTableProfessor.getSelectedRow(),12));

        /*jTextFieldNome.setText(nome);
        jFormattedTextFieldRg.setText(rg);
        jFormattedTextFieldCpf.setText(cpf);
        jTextFieldEndereco.setText(endereco);
        jTextFieldCidade.setText(cidade);
        jTextFieldNumero.setText(numero);
        jFormattedTextFieldData.setText(data);

        jComboBoxSexo.setSelectedItem(sexo);

        jTextFieldTelefone.setText(telefone);
        jTextFieldEmail.setText(email);
        jTextFieldRegistro.setText(registro);
        jTextFieldUsuario.setText(usuario);
            jTextFieldSenha.setText(senha);*/
         
         ConfigProfessor configProfessor = new ConfigProfessor();
         configProfessor.setVisible(true);
       
         
         }//chave if
    }//GEN-LAST:event_jTableProfessorMouseClicked


    
    
    
     public void setNome(String nome) {
        this.nome = nome;
    }

    /**
     * @param rg the rg to set
     */
    public void setRg(String rg) {
        this.rg = rg;
    }

    /**
     * @param cpf the cpf to set
     */
    public void setCpf(String cpf) {
        this.cpf = cpf;
    }

    /**
     * @param endereco the endereco to set
     */
    public void setEndereco(String endereco) {
        this.endereco = endereco;
    }

    /**
     * @param cidade the cidade to set
     */
    public void setCidade(String cidade) {
        this.cidade = cidade;
    }

    /**
     * @param numero the numero to set
     */
    public void setNumero(String numero) {
        this.numero = numero;
    }

    /**
     * @param data the data to set
     */
    public void setData(String data) {
        this.data = data;
    }

    /**
     * @param sexo the sexo to set
     */
    public void setSexo(String sexo) {
        this.sexo = sexo;
    }

    /**
     * @param telefone the telefone to set
     */
    public void setTelefone(String telefone) {
        this.telefone = telefone;
    }

    /**
     * @param email the email to set
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * @param registro the registro to set
     */
    public void setRegistro(String registro) {
        this.registro = registro;
    }

    /**
     * @param usuario the usuario to set
     */
    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }

    /**
     * @param senha the senha to set
     */
    public void setSenha(String senha) {
        this.senha = senha;
    }
    
    
    
    
    
    
    
    
    
    public String getNome() {
        return nome;
    }

    /**
     * @return the rg
     */
    public String getRg() {
        return rg;
    }

    /**
     * @return the cpf
     */
    public String getCpf() {
        return cpf;
    }

    /**
     * @return the endereco
     */
    public String getEndereco() {
        return endereco;
    }

    /**
     * @return the cidade
     */
    public String getCidade() {
        return cidade;
    }

    /**
     * @return the numero
     */
    public String getNumero() {
        return numero;
    }

    /**
     * @return the data
     */
    public String getData() {
        return data;
    }

    /**
     * @return the sexo
     */
    public String getSexo() {
        return sexo;
    }

    /**
     * @return the telefone
     */
    public String getTelefone() {
        return telefone;
    }

    /**
     * @return the email
     */
    public String getEmail() {
        return email;
    }

    /**
     * @return the registro
     */
    public String getRegistro() {
        return registro;
    }

    /**
     * @return the usuario
     */
    public String getUsuario() {
        return usuario;
    }

    /**
     * @return the senha
     */
    public String getSenha() {
        return senha;
    }
    
    
    
    
    
    
    public  void preecherTabela() throws IOException //Metodo para inicializar a tabela com os dados dos registros do XML
    {
        
       //Estrutura da tabela
       ArrayList dados = new ArrayList();
       String [] Colunas = new String[]{"Nome", "RG", "CPF", "Endereco", "Cidade", "Numero", "Data de Nascimento", "Sexo", "Telefone", "Email", "Registro", "Usuario", "Senha"}; //Selecionando o nome das colunas
        
       ModeloTabela modelo = new ModeloTabela(dados, Colunas);
       jTableProfessor.setModel(modelo);
        
        
        
        //Buscando os dados do arquivo XML
        try {
             FileReader ler = new FileReader("C:\\Users\\Wellington\\Documents\\FATEC\\Estrutura de Dados\\XMLs Projeto\\listaProfessores.xml");
              XStream xstream = new XStream(new DomDriver());
              xstream.alias("pessoa", ArrayList.class);
              xstream.processAnnotations(Pessoa.class);
              
              BufferedReader input = new BufferedReader(new FileReader("C:\\Users\\Wellington\\Documents\\FATEC\\Estrutura de Dados\\XMLs Projeto\\listaProfessores.xml"));
              ArrayList<Pessoa> listaProf2 = (ArrayList) xstream.fromXML(input);
              
              input.close();
         
              for(Pessoa pessoa: listaProf2)
              {
                  
                   dados.add(new Object[]{pessoa.getNome(), pessoa.getRG(), pessoa.getCPF(), pessoa.getEnd(), pessoa.getCidade(), pessoa.getNumero(), pessoa.getDate(), pessoa.getSexo(), pessoa.getTelefone(), pessoa.getEmail(), pessoa.getRegistro(), pessoa.getUsuario(), pessoa.getSenha()});
                   
              }
              
              
         
         } catch (FileNotFoundException ex) {
             Logger.getLogger(ListaProfessores.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        
    }//Metodo preencher tabela
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaProfessor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCab;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableProfessor;
    private javax.swing.JTextField jTextFieldPesquisar;
    // End of variables declaration//GEN-END:variables

    /**
     * @param nome the nome to set
     */
   

    /**
     * @return the nome
     */
   
}
